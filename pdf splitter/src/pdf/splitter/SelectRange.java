/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pdf.splitter;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfCopy;
import com.itextpdf.text.pdf.PdfImportedPage;
import com.itextpdf.text.pdf.PdfReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author umeshsahijwani
 */
public class SelectRange extends javax.swing.JFrame {

    /**
     * Creates new form SelectRange
     */
    public File file;
    public SelectRange(File file) {
        initComponents();
        setTitle("Range Selector");
        this.file=file;
        PdfReader reader = null;
        try {
            reader = new PdfReader(file.getAbsolutePath());
            System.out.println(reader);
        } catch (IOException ex) {
            Logger.getLogger(SelectRange.class.getName()).log(Level.SEVERE, null, ex);
        }
        Spinner_from.setValue(0);
        Spinner_to.setValue(reader.getNumberOfPages());
        getContentPane().setBackground(new java.awt.Color(204,204,255));

    }

    private SelectRange() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    /**
     *
     * @param input
     * @param startPage
     * @param endPage
     */
    public void splitPdf(File input, int startPage,int endPage)
    {
        
        int totalPages = (int) input.length();
        if (endPage<startPage)
        {
            int temp= endPage;
            endPage= startPage;
            startPage= temp;
        }
        if(endPage>totalPages)
        {
            endPage= totalPages;
        }
         try {
                PdfReader reader = new PdfReader(file.getAbsolutePath());
                System.out.println(reader);
                Document document1 = new Document();
                String outputPath1 = "split.pdf";
                PdfCopy copy1 = new PdfCopy(document1, new FileOutputStream(outputPath1));
                document1.open();
                for (int i = startPage; i <= endPage; i++) {
                    PdfImportedPage page = copy1.getImportedPage(reader, i);
                    copy1.addPage(page);
                }
                download(copy1);
                Download download = new Download();
                download.setVisible(true);
                document1.close();
                reader.close();
            
            } catch (IOException | DocumentException ex) {
            Logger.getLogger(SelectRange.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Heading = new javax.swing.JLabel();
        Label_from = new javax.swing.JLabel();
        Label_to = new javax.swing.JLabel();
        Spinner_from = new javax.swing.JSpinner();
        Spinner_to = new javax.swing.JSpinner();
        btn_convert = new javax.swing.JButton();
        Back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        Heading.setFont(new java.awt.Font("Sathu", 1, 18)); // NOI18N
        Heading.setText("Split PDF by Range");

        Label_from.setFont(new java.awt.Font("Silom", 0, 14)); // NOI18N
        Label_from.setText("From");

        Label_to.setFont(new java.awt.Font("Silom", 0, 14)); // NOI18N
        Label_to.setText("To");

        btn_convert.setFont(new java.awt.Font("Silom", 1, 14)); // NOI18N
        btn_convert.setText("Split PDF");
        btn_convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_convertActionPerformed(evt);
            }
        });

        Back.setFont(new java.awt.Font("Silom", 1, 14)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Label_to)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Spinner_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Label_from)
                                .addGap(58, 58, 58)
                                .addComponent(Spinner_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_convert)
                                .addGap(18, 18, 18)
                                .addComponent(Back))
                            .addComponent(Heading))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(Heading)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_from)
                    .addComponent(Spinner_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_to)
                    .addComponent(Spinner_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_convert)
                    .addComponent(Back))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_convertActionPerformed
        
        
        //System.out.println(file);
        int startPage = (int) Spinner_from.getValue();
        int endPage = (int) Spinner_to.getValue();
        //splitPdf(file,startPage,endPage);
        Download download = new Download();
        download.setVisible(true);
        splitPdf(file,startPage,endPage);
    }//GEN-LAST:event_btn_convertActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectRange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SelectRange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JLabel Heading;
    private javax.swing.JLabel Label_from;
    private javax.swing.JLabel Label_to;
    private javax.swing.JSpinner Spinner_from;
    private javax.swing.JSpinner Spinner_to;
    private javax.swing.JButton btn_convert;
    // End of variables declaration//GEN-END:variables

     void download(PdfCopy copy1) throws IOException {
    String outputPath = "split.pdf";

    // Save the PDF copy to a file
    copy1.close();

    // Create a file object for the output file
    File outputFile = new File(outputPath);

    // Create a file chooser dialog to prompt the user for the download location
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setSelectedFile(outputFile);
    int option = fileChooser.showSaveDialog(this);

    if (option == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();

        // Copy the output file to the selected location
        Files.copy(outputFile.toPath(), selectedFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
    }
}

}
